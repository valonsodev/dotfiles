#!/usr/bin/env bash
{{ warnf .chezmoi.hostname }}
{{- if eq .chezmoi.hostname "v-DESKTOP" }}
# Generated by chezmoi template: runs only on host v-DESKTOP
# Install/update selected pacman & AUR packages after `chezmoi apply`.

set -euo pipefail

echo "[host-packages] Host matched ({{ .chezmoi.hostname }})"

# Editable lists (modify via chezmoi and re-apply)
PACMAN_PACKAGES=(
  foot
  fish
  atuin
  matugen
  flameshot
  mako
  rofi-wayland
  wf-recorder
)

AUR_PACKAGES=(
  caelestia-shell
  vesktop-bin
  clipse
)

if ! command -v sudo >/dev/null 2>&1; then
  echo "[host-packages] sudo not available, cannot install packages." >&2
  exit 0
fi

install_pacman() {
  local to_install=()
  for p in "$@"; do
    if ! pacman -Q "$p" >/dev/null 2>&1; then
      to_install+=("$p")
    fi
  done
  if ((${#to_install[@]})); then
    echo "[host-packages] Installing pacman packages: ${to_install[*]}"
    sudo pacman -S --needed --noconfirm "${to_install[@]}" || echo "[host-packages] pacman install failed" >&2
  else
    echo "[host-packages] All pacman packages already installed"
  fi
}

find_aur_helper() {
  for helper in yay paru aura trizen pikaur; do
    if command -v "$helper" >/dev/null 2>&1; then
      echo "$helper"; return 0
    fi
  done
  return 1
}

install_aur() {
  local helper
  if ! helper=$(find_aur_helper); then
    echo "[host-packages] No AUR helper found (yay/paru/etc), skipping AUR packages" >&2
    return 0
  fi
  local to_install=()
  for p in "$@"; do
    if ! pacman -Q "$p" >/dev/null 2>&1; then
      to_install+=("$p")
    fi
  done
  if ((${#to_install[@]})); then
    echo "[host-packages] Installing AUR packages with $helper: ${to_install[*]}"
    # shellcheck disable=SC2086
    "$helper" -S --needed --noconfirm ${to_install[*]} || echo "[host-packages] AUR install failed" >&2
  else
    echo "[host-packages] All AUR packages already installed"
  fi
}

install_pacman "${PACMAN_PACKAGES[@]}"
install_aur "${AUR_PACKAGES[@]}"

echo "[host-packages] Done."
{{- end }}